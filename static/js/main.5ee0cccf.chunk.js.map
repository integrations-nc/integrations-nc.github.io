{"version":3,"sources":["Comments.js","App.js","index.js"],"names":["Comments","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","style","padding","width","props","comments","map","commnet","key","id","onClick","onCommentClick","selected","background","margin","cursor","owner","color","date","msg","Component","App","wvDocumentLoadedHandler","annotManager","on","annotations","type","info","imported","console","log","exportAnnotCommand","then","xfdf","annotation","newCmnt","Date","toLocaleString","setState","state","concat","toConsumableArray","Id","commentId","stored","find","viewer","React","createRef","docViewer","instance","bind","assertThisInitialized","_this2","window","WebViewer","path","initialDoc","disabledElements","current","setCurrentUser","addEventListener","e","pageNumber","slicedToArray","detail","comment","getAnnotationById","jumpToAnnotation","selectAnnotation","className","ref","src_Comments","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5ee0cccf.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Comments extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{padding: '8px 16px'}}>\r\n        <h4>Comment Section</h4>\r\n        <div style={{ width: \"100%\"}}>\r\n          {this.props.comments.map(commnet => (\r\n            <div\r\n              key={commnet.id}\r\n              onClick={() => this.props.onCommentClick(commnet)}\r\n              style={\r\n                this.props.selected === commnet.id\r\n                  ? { background: \"bisque\", margin: '8px 0 0 0', cursor: 'pointer' }\r\n                  : { background: \"white\", margin: '8px 0 0 0', cursor: 'pointer' }\r\n              }\r\n            >\r\n              <div>\r\n                <h5>{commnet.owner} <small style={{color: 'grey'}}>  at {commnet.date}</small></h5>\r\n                <p>{commnet.msg}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Commnets from './Comments';\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.viewer = React.createRef();\r\n    this.docViewer = null;\r\n    this.annotManager = null;\r\n    this.instance = null;\r\n    this.onCommentClick = this.onCommentClick.bind(this);\r\n    this.state = {\r\n      comments: [],\r\n      annotations: [],\r\n      selected: null\r\n    }\r\n    this.id = 1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.WebViewer({\r\n      path: '/lib',\r\n      initialDoc: '/files/webviewer-demo-annotated.pdf',\r\n      disabledElements: [\r\n        'notesPanel',\r\n        'notesPanelButton',\r\n        'miscToolGroupButton',\r\n        'freeTextToolButton',\r\n        'eraserToolButton',\r\n        'signatureToolButton',\r\n        'stickyToolButton',\r\n        'searchButton',\r\n        'printButton'\r\n      ]\r\n    }, this.viewer.current).then(instance => {\r\n      // at this point, the viewer is 'ready'\r\n      // call methods from instance, docViewer and annotManager as needed\r\n      this.instance = instance;\r\n      this.docViewer = instance.docViewer;\r\n      this.annotManager = instance.annotManager;\r\n\r\n      this.annotManager.setCurrentUser('John Doe');\r\n\r\n      console.log(instance);\r\n\r\n      // you can also access major namespaces from the instance as follows:\r\n      // var Tools = instance.Tools;\r\n      // var Annotations = instance.Annotations;\r\n\r\n      // or listen to events from the viewer element\r\n      this.viewer.current.addEventListener('pageChanged', (e) => {\r\n        const [ pageNumber ] = e.detail;\r\n        console.log(`Current page is ${pageNumber}`);\r\n      });\r\n\r\n      // or from the docViewer instance\r\n      this.docViewer.on('annotationsLoaded', () => {\r\n        console.log('annotations loaded');\r\n      });\r\n\r\n      this.docViewer.on('documentLoaded', this.wvDocumentLoadedHandler)\r\n    })\r\n  }\r\n\r\n\r\n  wvDocumentLoadedHandler = () => {\r\n    // Bind annotation change events to a callback function\r\n    this.annotManager.on('annotationChanged', (annotations, type, info) => {\r\n      // info.imported is true by default for annotations from pdf and annotations added by importAnnotCommand\r\n      if (info.imported) {\r\n        return;\r\n      }\r\n\r\n      console.log('annotationChanged', annotations, type, info);\r\n\r\n      this.annotManager.exportAnnotCommand().then((xfdf) => {\r\n        if(type==='add') {\r\n          // add cmp root comment: \"Created an annotation\"\r\n          // when user clicks on the newly added and highlighted cmp comment\r\n          const annotation = annotations[0];\r\n          // this.annotManager.jumpToAnnotation(annotation);\r\n          // this.annotManager.selectAnnotation(annotation);\r\n          \r\n          const id = this.id++;\r\n          const newCmnt = {\r\n            id,\r\n            owner: \"John Doe\",\r\n            date: new Date().toLocaleString(),\r\n            msg: 'I just commented against this annotation - '+ id\r\n          };\r\n          this.setState(state => ({\r\n            comments: [...state.comments, newCmnt],\r\n            annotations: [...state.annotations, {\r\n              id: annotation.Id,\r\n              commentId: newCmnt.id,\r\n              xfdf\r\n            }]\r\n          }))\r\n        }\r\n      });\r\n    });\r\n\r\n\r\n    this.annotManager.on('annotationSelected', (annotations, selected) => {\r\n      console.log('annotationSelected', annotations, selected);\r\n      if(selected==='selected') {\r\n        // highlight corresponding cmp comment\r\n        const annotation = annotations[0];\r\n        const stored = this.state.annotations.find(a => a.id ===  annotation.Id);\r\n        this.setState({\r\n          selected: stored.commentId\r\n        })\r\n      }\r\n      else if(selected==='deselected') {\r\n        // unhighlight corresponding cmp comment\r\n      };\r\n    });\r\n  }\r\n\r\n  onCommentClick(comment) {\r\n    console.log(comment);\r\n    const stored = this.state.annotations.find(a => a.commentId ===  comment.id);\r\n    const annotation = this.annotManager.getAnnotationById(stored.id);\r\n    this.annotManager.jumpToAnnotation(annotation);\r\n    this.annotManager.selectAnnotation(annotation);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"webviewer\" ref={this.viewer}></div>\r\n        <Commnets \r\n          className=\"comments\" \r\n          comments={this.state.comments}\r\n          onCommentClick={this.onCommentClick}\r\n          selected={this.state.selected}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}